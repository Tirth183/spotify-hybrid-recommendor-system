name: CI-CD

on: push

jobs:
  CI:
    runs-on: ubuntu-latest

    steps:
      - name: Code Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'

      - name: Install Packages
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-north-1

      - name: DVC Pull
        run: |
          dvc pull

      - name: Run Application
        run: |
          nohup streamlit run app.py --server.port 8000 &
          sleep 30

      - name: Test App
        run: |
          pytest test_app.py

      - name: Stop Streamlit App
        run: |
          pkill -f "streamlit run"

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          REPOSITORY: spotify_hybrid_recsys  # <-- use ECR repository name only, not full URI
          IMAGE_TAG: latest
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG

      - name: Zip files for deployment
        if: success()
        run: |
          zip -r deployment.zip appspec.yml deploy/scripts/install_dependencies.sh deploy/scripts/start_docker.sh

      - name: Upload ZIP to S3
        if: success()
        run: |
          aws s3 cp deployment.zip s3://spotify-hybrid-recm-system-remote/deployment.zip

      - name: Deploy to AWS CodeDeploy
        if: success()
        run: |
          aws deploy create-deployment \
            --application-name hybridrecommendersystem \
            --deployment-config-name CodeDeployDefault.AllAtOnce \
            --deployment-group-name hybridrecsysdeploymentgroup \
            --s3-location bucket=hybridrecsysdeploymentbucket,key=deployment.zip,bundleType=zip \
            --file-exists-behavior OVERWRITE \
            --region eu-north-1
